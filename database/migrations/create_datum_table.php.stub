<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up()
    {
        Schema::create('datum_values', static function (Blueprint $table) {
                    $table->id();
                    $table->unsignedInteger('timestamp');
                    $table->string('type');
                    $table->mediumText('key');
                    $table->char('key_hash', 16)->charset('binary')->virtualAs('unhex(md5(`key`))');
                    $table->mediumText('value');

                    $table->index('timestamp'); // For trimming...
                    $table->index('type'); // For fast lookups and purging...
                    $table->unique(['type', 'key_hash']); // For data integrity and upserts...
                });

                Schema::create('datum_entries', static function (Blueprint $table) {
                    $table->id();
                    $table->unsignedInteger('timestamp');
                    $table->string('type');
                    $table->mediumText('key');
                    $table->char('key_hash', 16)->charset('binary')->virtualAs('unhex(md5(`key`))');
                    $table->bigInteger('value')->nullable();

                    $table->index('timestamp'); // For trimming...
                    $table->index('type'); // For purging...
                    $table->index('key_hash'); // For mapping...
                    $table->index(['timestamp', 'type', 'key_hash', 'value']); // For aggregate queries...
                });

                Schema::create('datum_aggregates', static function (Blueprint $table) {
                    $table->id();
                    $table->unsignedInteger('bucket');
                    $table->unsignedMediumInteger('period');
                    $table->string('type');
                    $table->mediumText('key');
                    $table->char('key_hash', 16)->charset('binary')->virtualAs('unhex(md5(`key`))');
                    $table->string('aggregate');
                    $table->decimal('value', 20, 2);
                    $table->unsignedInteger('count')->nullable();

                    $table->unique(['bucket', 'period', 'type', 'aggregate', 'key_hash']); // Force "on duplicate update"...
                    $table->index(['period', 'bucket']); // For trimming...
                    $table->index('type'); // For purging...
                    $table->index(['period', 'type', 'aggregate', 'bucket']); // For aggregate queries...
                });
    }
};
